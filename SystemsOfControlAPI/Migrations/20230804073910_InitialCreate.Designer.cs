// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SystemsOfControlAPI.Entities.Models;

#nullable disable

namespace SystemsOfControlAPI.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20230804073910_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SystemsOfControlAPI.Entities.Models.Cabinet", b =>
                {
                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Number")
                        .HasName("PK__Cabinets__78A1A19CFB1A0891");

                    b.ToTable("Cabinets");
                });

            modelBuilder.Entity("SystemsOfControlAPI.Entities.Models.District", b =>
                {
                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Number")
                        .HasName("PK__District__78A1A19C3DDF1D75");

                    b.ToTable("District", (string)null);
                });

            modelBuilder.Entity("SystemsOfControlAPI.Entities.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Cabinet")
                        .HasColumnType("int");

                    b.Property<int?>("District")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Specialization")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Doctors__3214EC273D471EE0");

                    b.HasIndex("Cabinet");

                    b.HasIndex("District");

                    b.HasIndex("Specialization");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("SystemsOfControlAPI.Entities.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<int?>("District")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Patients__3214EC27A9D32C4C");

                    b.HasIndex("District");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("SystemsOfControlAPI.Entities.Models.Specialization", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Name")
                        .HasName("PK__Speciali__737584F7D7AD2E06");

                    b.ToTable("Specialization", (string)null);
                });

            modelBuilder.Entity("SystemsOfControlAPI.Entities.Models.Doctor", b =>
                {
                    b.HasOne("SystemsOfControlAPI.Entities.Models.Cabinet", "CabinetNavigation")
                        .WithMany("Doctors")
                        .HasForeignKey("Cabinet")
                        .HasConstraintName("FK__Doctors__Cabinet__4CA06362");

                    b.HasOne("SystemsOfControlAPI.Entities.Models.District", "DistrictNavigation")
                        .WithMany("Doctors")
                        .HasForeignKey("District")
                        .HasConstraintName("FK__Doctors__Distric__4E88ABD4");

                    b.HasOne("SystemsOfControlAPI.Entities.Models.Specialization", "SpecializationNavigation")
                        .WithMany("Doctors")
                        .HasForeignKey("Specialization")
                        .HasConstraintName("FK__Doctors__Special__4D94879B");

                    b.Navigation("CabinetNavigation");

                    b.Navigation("DistrictNavigation");

                    b.Navigation("SpecializationNavigation");
                });

            modelBuilder.Entity("SystemsOfControlAPI.Entities.Models.Patient", b =>
                {
                    b.HasOne("SystemsOfControlAPI.Entities.Models.District", "DistrictNavigation")
                        .WithMany("Patients")
                        .HasForeignKey("District")
                        .HasConstraintName("FK__Patients__Distri__49C3F6B7");

                    b.Navigation("DistrictNavigation");
                });

            modelBuilder.Entity("SystemsOfControlAPI.Entities.Models.Cabinet", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("SystemsOfControlAPI.Entities.Models.District", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("Patients");
                });

            modelBuilder.Entity("SystemsOfControlAPI.Entities.Models.Specialization", b =>
                {
                    b.Navigation("Doctors");
                });
#pragma warning restore 612, 618
        }
    }
}
